function [ output ] = PreProcess( config , helicaseImageRaw , dnaImageRaw )
    % Pre Process - Pre processes data before the lucky algorithm
    % Detailed explanation goes here

    N = size( helicaseImageRaw , 3 );
    M = size( dnaImageRaw , 3 );
    helicaseImageSmooth = 0;
    dnaImageSmooth = 0;
    
    rowCorrect = 430;  % FIX TO CORRECT FOR THE MISALIGNED IMAGE PART, remove this later!
   
    
     
     
     rightImageCorrect = rightImage( 1: rowCorrect , : )
    for i=1:N
        cropHelicase = CropSplitImage( config , helicaseImageRaw(:,:,i) );
        helicaseImage = double( cropHelicase.leftImage );
        helicaseImage leftImageCorrect = leftImage( 1:rowCorrect , : )

  
        helicaseSmooth = BallSmooth( helicaseImage , 50) ;
        helicaseCorrection = max(helicaseSmooth(:))./helicaseSmooth;
        helicases(:,:,i)= helicaseCorrection.*helicaseImage;
        helicaseImageSmooth = helicaseImageSmooth+helicases(:,:,i);
        helicaseImageFilter = BackgroundFilter( helicaseImageSmooth );
    end
    
    for j=1:M
        cropDna = CropSplitImage( config , dnaImageRaw(:,:,j) );
        dnaImage = double( cropDna.rightImage );
        
        dnaSmooth = BallSmooth( dnaImage , 50) ;
        dnaCorrection = max(dnaSmooth(:))./dnaSmooth;
        dna(:,:,j)= dnaCorrection.*dnaImage;
        dnaImageSmooth = dnaImageSmooth+dna(:,:,j);
        dnaImageFilter = BackgroundFilter( dnaImageSmooth );
    end
    
    figure;
    subplot(1,2,1); imshow( helicaseImage , [100 120]); colorbar
    subplot(1,2,2); imshow( dnaImage , [] ) ; colorbar
    figure;
    subplot(1,2,1); imshow( helicaseImageFilter , [0 50]); colorbar
    subplot(1,2,2); imshow( dnaImageFilter , []); colorbar
    
    
;
     
    output.dnaImage = dnaImageFilter/N;
    output.helicaseImage = helicaseImageFilter/N;
    
    
end

