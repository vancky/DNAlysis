function [ output ] = SplitCorrelation( config, beamshape ,  inputImage )
    % Split Correlation - Correlates one matrix containing two split images
    % 1. Split the image
    % 2. Perform beamshape correction
    % 3. Correlate the image, find where correlation is maximal
    % 4. Perform correction based on this correlation
    
    
    % Split the image horizontal and get dimensions for later computations    

    splitImage=CropSplitImage( config , inputImage );
    output.leftImage=splitImage.leftImage;
    output.rightImage=splitImage.rightImage;
    rowLeft=size(output.leftImage,1);
    colLeft=size(output.leftImage,2);
    rowRight=size(output.rightImage,1);
    colRight=size(output.rightImage,2);
    
    % Perform beamshape correction
    
    bsCorr.leftImage  = output.leftImage; %BeamshapeCorrection( beamshape.cam0.leftImage , output.leftImage );
    bsCorr.rightImage = output.rightImage; %BeamshapeCorrection( beamshape.cam0.rightImage , output.rightImage );
    
    % Make a crop in the vertical direction for proper correlation
    output.croppedImage=bsCorr.rightImage( 1+round(rowRight/4) : 3*round(rowRight/4) , 1+round(colRight/4):7*round(colRight/8) );   
    cropsize=size(output.croppedImage)
    % Perform the correlation    
        
    output.correlation=xcorr2( output.croppedImage , bsCorr.leftImage );
    
    % Find the index of maximum correlation
    
    [maxValue , output.maxIndex]=max(output.correlation(:));
    [rowIndex, colIndex] = ind2sub(size(output.correlation),output.maxIndex)
    rowCorrection=rowIndex-(rowRight+cropsize(1))/2+rowRight/8
    colCorrection=colIndex-(colRight+cropsize(2))/2
    output.rowCorrection=rowCorrection;
    output.colCorrection=colCorrection;
   
    % Perform the correction
    
    output.rightImageCorrected=bsCorr.rightImage;
    output.leftImageCorrected=zeros(size(bsCorr.leftImage));
    
    for i=1:colLeft
        for j=1:rowLeft
            if (j+rowCorrection > 0 && j+rowCorrection<=rowLeft) && (i-colCorrection > 0 && i-colCorrection <=colLeft)
          %      output.leftImageCorrected( j-rowCorrection ,i-colCorrection)=(bsCorr.leftImage(j,i));
            end
        end
    end
    
    % Compare the non correlated and correlated images
   
    figure;
    blockSize=config.checkerBoardSizeSplit;           % blocksize for the checkerboard pattern
    subplot(1,2,1); CompareSplit(bsCorr.leftImage(:,1:colRight), bsCorr.rightImage, blockSize); title('No correlation')
    subplot(1,2,2); CompareSplit(output.leftImageCorrected(:,1:colRight), output.rightImageCorrected, blockSize); title('With correlation')

end

