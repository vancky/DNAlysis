function [ config, output ] = BeamshapeCorrection( config, importImages )
    % Beamshape Correction - Corrects for the beamshape profile
    % Please input the images as a 3D matrix, i.e. images(:,:,N) where N is
    % the total number of images

    
    % Calcultaes the crop coordinates for cam0
    config.cropCoordinates = GenerateCropCoordinates( importImages.beamshape.cam0{1}, config.imageDirection);
    % Amount of field of views for analysis.
    config.numFovs = length( importImages.cam0);

%     croppedImage = CropSplitCam0( config, importImages.beamshape.cam0{1});
%         
%     % Computes the beamshapes
%     beamshapeCam0 = ComputeBeamshape( croppedImage);
%     beamshapeCam1 = ComputeBeamshape( importImages.beamshape.cam1{1});
    
    % Multiplies the normalized beamshape with the images
    
    for ii = 1:config.numFovs
        numFrames = size( importImages.cam0{ii}, 3);
        for j = 1:numFrames
            % Crops the image from cam 0
            croppedImage = CropSplitCam0( config, importImages.cam0{ii}(:,:,j));

            cam0 = croppedImage;
            cam1 = importImages.cam1{ii}(:,:,j);
            
            % Multplies with the beamshape matrix            
            correctedCam0{ii}(:,:,j) = double(cam0).*double(beamshapeCam0);
            correctedCam1{ii}(:,:,j) = double(cam1).*double(beamshapeCam1);
            
            filt11 = medfilt2( cam1, [50 50], 'symmetric');
            beamshape11= ComputeBeamshape(double(filt11));
            selfCorrectedCam1{ii}(:,:,j) = double(cam1).*beamshape11;
            
            filteredImage = medfilt2( cam0, [30 30], 'symmetric');
            filteredImage2 = medfilt2( cam0, [50 50], 'symmetric');
            
            filteredBeamshape = ComputeBeamshape( double(filteredImage));
            filteredBeamshape2 = ComputeBeamshape( double(filteredImage2));
            
            selfCorrectedCam02{ii}(:,:,j) = double(cam0).*double(filteredBeamshape2);            
        end
    end
    
%     output.cam0 = correctedCam0;
%     output.cam1 = correctedCam1;
    output = [];
    fprintf('Beamshape Corrected.\n')
    
    
    for ii = 1:4
        figure;
        original = CropSplitCam0( config, importImages.cam0{ii}(:,:,3)) ;
        new = correctedCam0{ii}(:,:,3);
        self = selfCorrectedCam01{ii}(:,:,3);
        filtered = selfCorrectedCam02{ii}(:,:,3);
        subplot(2,2,1); imshow( original, []); title(' original');
        subplot(2,2,2); imshow( new, []); title(' beamshape corrected');
        subplot(2,2,3); imshow( self, []); title(' Corrected with own statistics');
        subplot(2,2,4); imshow( filtered, []); title(' Corrected with own statistics');
    end
    
    
    for ii = 1:4
        figure;
        original = importImages.cam1{ii}(:,:,3) ;
        new = correctedCam1{ii}(:,:,3);
        self = selfCorrectedCam1{ii}(:,:,3);
        subplot(2,2,1); imshow( original, []); title(' original');
        subplot(2,2,2); imshow( new, []); title(' beamshape corrected');
        subplot(2,2,3); imshow( self, []); title(' Corrected with own statistics');
    end
end

